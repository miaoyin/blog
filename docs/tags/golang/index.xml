<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on busee</title>
    <link>https://www.yongqingking.top/tags/golang/</link>
    <description>Recent content in golang on busee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 11 Dec 2022 17:25:00 +0800</lastBuildDate>
    <atom:link href="https://www.yongqingking.top/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>全局gin对象如何在子模块中修改Logger</title>
      <link>https://www.yongqingking.top/posts/golang/%E5%85%A8%E5%B1%80gin%E5%AF%B9%E8%B1%A1%E5%A6%82%E4%BD%95%E5%9C%A8%E5%AD%90%E6%A8%A1%E5%9D%97%E4%B8%AD%E4%BF%AE%E6%94%B9logger/</link>
      <pubDate>Sun, 11 Dec 2022 17:25:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/%E5%85%A8%E5%B1%80gin%E5%AF%B9%E8%B1%A1%E5%A6%82%E4%BD%95%E5%9C%A8%E5%AD%90%E6%A8%A1%E5%9D%97%E4%B8%AD%E4%BF%AE%E6%94%B9logger/</guid>
      <description>gin是通过中间件写日志, 日志对象是中间件的闭包变量。在use加载中间件完成之后，无法修改日志对象。 该如何办呢？</description>
    </item>
    <item>
      <title>viper监控文件变化出现两次事件</title>
      <link>https://www.yongqingking.top/posts/golang/viper%E7%9B%91%E6%8E%A7%E6%96%87%E4%BB%B6%E5%8F%98%E5%8C%96%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Sat, 17 Sep 2022 19:34:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/viper%E7%9B%91%E6%8E%A7%E6%96%87%E4%BB%B6%E5%8F%98%E5%8C%96%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E4%BA%8B%E4%BB%B6/</guid>
      <description>监控配置文件变化，如果内容发生了修改，需要及时加载. 使用viper监控文件变化发现了, 对文件修改一次，会出发两次事件.</description>
    </item>
    <item>
      <title>gin支持prometheus</title>
      <link>https://www.yongqingking.top/posts/golang/gin%E6%94%AF%E6%8C%81prometheus/</link>
      <pubDate>Wed, 03 Aug 2022 15:25:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/gin%E6%94%AF%E6%8C%81prometheus/</guid>
      <description>influxdb的docker-compose如何配置</description>
    </item>
    <item>
      <title>influxdb遇到时间点存储不了</title>
      <link>https://www.yongqingking.top/posts/golang/influxdb%E9%81%87%E5%88%B0%E6%97%B6%E9%97%B4%E7%82%B9%E5%AD%98%E5%82%A8%E4%B8%8D%E4%BA%86/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/influxdb%E9%81%87%E5%88%B0%E6%97%B6%E9%97%B4%E7%82%B9%E5%AD%98%E5%82%A8%E4%B8%8D%E4%BA%86/</guid>
      <description>有一份mysql存储的历史数据，准备把它转为influxdb存储, 时间点用的是mysql表中记录的创建时间，创建时间是时许的。</description>
    </item>
    <item>
      <title>msgpack代替json防止丢失类型</title>
      <link>https://www.yongqingking.top/posts/golang/msgpack%E4%BB%A3%E6%9B%BFjson%E9%98%B2%E6%AD%A2%E4%B8%A2%E5%A4%B1%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/msgpack%E4%BB%A3%E6%9B%BFjson%E9%98%B2%E6%AD%A2%E4%B8%A2%E5%A4%B1%E7%B1%BB%E5%9E%8B/</guid>
      <description>开发了一个通信协议, 协议对数据类型比较敏感, 根据不同数据数据类型使用不同格式。golang的数据类型能够满足需求。</description>
    </item>
    <item>
      <title>nats-server系统服务只能使用sc命令注册</title>
      <link>https://www.yongqingking.top/posts/golang/nats-server%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%E5%8F%AA%E8%83%BD%E4%BD%BF%E7%94%A8sc%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%86%8C/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/nats-server%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%E5%8F%AA%E8%83%BD%E4%BD%BF%E7%94%A8sc%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%86%8C/</guid>
      <description>windows环境下nats-server注册成系统, 官方推荐是sc命令, 而我觉得sc命令台太麻烦</description>
    </item>
    <item>
      <title>nats批量publish最后一条疑似丢失</title>
      <link>https://www.yongqingking.top/posts/golang/nats%E6%89%B9%E9%87%8Fpublish%E6%9C%80%E5%90%8E%E4%B8%80%E6%9D%A1%E7%96%91%E4%BC%BC%E4%B8%A2%E5%A4%B1/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/nats%E6%89%B9%E9%87%8Fpublish%E6%9C%80%E5%90%8E%E4%B8%80%E6%9D%A1%E7%96%91%E4%BC%BC%E4%B8%A2%E5%A4%B1/</guid>
      <description>写了一个测试脚本，从数据读取一组数据，然后逐条publish到nats-server中, 确定每条都publish了, 有另外一个程序中subscribe订阅，在该程序发现最后一条一直没收到</description>
    </item>
    <item>
      <title>nats的安装docker方式</title>
      <link>https://www.yongqingking.top/posts/golang/nats%E7%9A%84%E5%AE%89%E8%A3%85docker%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/nats%E7%9A%84%E5%AE%89%E8%A3%85docker%E6%96%B9%E5%BC%8F/</guid>
      <description>docker-compose方式启动nats-server。nats的镜像非常小, docker-cpomse进行管理。下面是配置方式</description>
    </item>
    <item>
      <title>nsq.reader错误connection closed</title>
      <link>https://www.yongqingking.top/posts/golang/nsq.reader%E9%94%99%E8%AF%AFconnection-closed/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/nsq.reader%E9%94%99%E8%AF%AFconnection-closed/</guid>
      <description>学习官网例子时，会碰到的一个小错误</description>
    </item>
    <item>
      <title>nsq双机集群部署</title>
      <link>https://www.yongqingking.top/posts/golang/nsq%E5%8F%8C%E6%9C%BA%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/nsq%E5%8F%8C%E6%9C%BA%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</guid>
      <description>双机nsq如果部署集群，如何保证高可用性</description>
    </item>
    <item>
      <title>rabbitmq辣眼睛的忙等</title>
      <link>https://www.yongqingking.top/posts/golang/rabbitmq%E8%BE%A3%E7%9C%BC%E7%9D%9B%E7%9A%84%E5%BF%99%E7%AD%89/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/rabbitmq%E8%BE%A3%E7%9C%BC%E7%9D%9B%E7%9A%84%E5%BF%99%E7%AD%89/</guid>
      <description>用golang做了一个分布式结构的系统, 消息服务器用了rabbitmq, 整体是基于machinery+rabbitmq形式的分布式任务系统。在做压力测试时，发现rabbitmq的cpu使用率飙升</description>
    </item>
    <item>
      <title>zap日志写入通道被覆盖</title>
      <link>https://www.yongqingking.top/posts/golang/zap%E6%97%A5%E5%BF%97%E5%86%99%E5%85%A5%E9%80%9A%E9%81%93%E8%A2%AB%E8%A6%86%E7%9B%96/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/zap%E6%97%A5%E5%BF%97%E5%86%99%E5%85%A5%E9%80%9A%E9%81%93%E8%A2%AB%E8%A6%86%E7%9B%96/</guid>
      <description>实现了一个io.Writer接口，允许zap日志写入，传递给界面，出现了日志被覆盖、重复的情况。</description>
    </item>
    <item>
      <title>任务队列machinery用法</title>
      <link>https://www.yongqingking.top/posts/golang/%E4%BB%BB%E5%8A%A1%E9%98%9F%E5%88%97machinery%E7%94%A8%E6%B3%95/</link>
      <pubDate>Mon, 25 Jul 2022 12:03:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/%E4%BB%BB%E5%8A%A1%E9%98%9F%E5%88%97machinery%E7%94%A8%E6%B3%95/</guid>
      <description>go实现的基于消息中间件的异步任务队列, 下面是学习笔记</description>
    </item>
    <item>
      <title>go实现Event事件模型修正</title>
      <link>https://www.yongqingking.top/posts/golang/go%E5%AE%9E%E7%8E%B0event%E4%BA%8B%E4%BB%B6%E6%A8%A1%E5%9E%8B%E4%BF%AE%E6%AD%A3/</link>
      <pubDate>Mon, 25 Jul 2022 11:52:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/go%E5%AE%9E%E7%8E%B0event%E4%BA%8B%E4%BB%B6%E6%A8%A1%E5%9E%8B%E4%BF%AE%E6%AD%A3/</guid>
      <description>之前文章中实现了event事件模型，实际使用中发现了几个问题</description>
    </item>
    <item>
      <title>influxdb如何把point中的多个field一起查出来</title>
      <link>https://www.yongqingking.top/posts/golang/influxdb%E5%A6%82%E4%BD%95%E6%8A%8Apoint%E4%B8%AD%E7%9A%84%E5%A4%9A%E4%B8%AAfield%E4%B8%80%E8%B5%B7%E6%9F%A5%E5%87%BA%E6%9D%A5/</link>
      <pubDate>Mon, 25 Jul 2022 11:52:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/influxdb%E5%A6%82%E4%BD%95%E6%8A%8Apoint%E4%B8%AD%E7%9A%84%E5%A4%9A%E4%B8%AAfield%E4%B8%80%E8%B5%B7%E6%9F%A5%E5%87%BA%E6%9D%A5/</guid>
      <description>influx查询包含了水平拆分、垂直拆分. 查询结果的每一条记录record，只对应一个field. 写入一个point时包含多个field, 查询时如何将这几个field一起查出来呢？</description>
    </item>
    <item>
      <title>go实现Event事件</title>
      <link>https://www.yongqingking.top/posts/golang/go%E5%AE%9E%E7%8E%B0event%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Mon, 25 Jul 2022 11:50:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/go%E5%AE%9E%E7%8E%B0event%E4%BA%8B%E4%BB%B6/</guid>
      <description>go协程之间用通道通信，如何将它改造成事件形式。</description>
    </item>
    <item>
      <title>go实现Event事件context版</title>
      <link>https://www.yongqingking.top/posts/golang/go%E5%AE%9E%E7%8E%B0event%E4%BA%8B%E4%BB%B6context%E7%89%88/</link>
      <pubDate>Mon, 25 Jul 2022 11:50:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/go%E5%AE%9E%E7%8E%B0event%E4%BA%8B%E4%BB%B6context%E7%89%88/</guid>
      <description>上一篇文章，写了go如何实现Event事件，有几个可以优化的地方.</description>
    </item>
    <item>
      <title>go和python解码msgpack不一致</title>
      <link>https://www.yongqingking.top/posts/golang/go%E5%92%8Cpython%E8%A7%A3%E7%A0%81msgpack%E4%B8%8D%E4%B8%80%E8%87%B4/</link>
      <pubDate>Mon, 25 Jul 2022 11:49:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/go%E5%92%8Cpython%E8%A7%A3%E7%A0%81msgpack%E4%B8%8D%E4%B8%80%E8%87%B4/</guid>
      <description>有一个消息字典类型, 使用go进行编码, 传入消息中间件。同时有一个python程序监听, 监听到消息之后进行解码, 遇到了编码问题</description>
    </item>
    <item>
      <title>go基于ectd实现服务注册</title>
      <link>https://www.yongqingking.top/posts/golang/go%E5%9F%BA%E4%BA%8Eectd%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C/</link>
      <pubDate>Mon, 25 Jul 2022 11:49:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/go%E5%9F%BA%E4%BA%8Eectd%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C/</guid>
      <description>基于etcd实现go程序的服务注册，所看的学习资料均比较简单, 实际中要经过反复测试，自己写了一个先用着，有坑再填.</description>
    </item>
    <item>
      <title>go如何实现并发安全的优先级队列</title>
      <link>https://www.yongqingking.top/posts/golang/go%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E9%98%9F%E5%88%97/</link>
      <pubDate>Mon, 25 Jul 2022 11:49:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/go%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E9%98%9F%E5%88%97/</guid>
      <description>go的如何实现优先级队列？</description>
    </item>
    <item>
      <title>go版本的supervisord</title>
      <link>https://www.yongqingking.top/posts/golang/go%E7%89%88%E6%9C%AC%E7%9A%84supervisord/</link>
      <pubDate>Mon, 25 Jul 2022 11:49:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/go%E7%89%88%E6%9C%AC%E7%9A%84supervisord/</guid>
      <description>python版本的supervisord, 在linux、windows系统中离线安装都不怎么方便.  是否有go版本的呢?</description>
    </item>
    <item>
      <title>go的反射有什么不同</title>
      <link>https://www.yongqingking.top/posts/golang/go%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C/</link>
      <pubDate>Mon, 25 Jul 2022 11:49:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/go%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C/</guid>
      <description>go的反射有什么不同, 与动态语言python有什么不同</description>
    </item>
    <item>
      <title>golang位移操作的一个小坑</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E4%BD%8D%E7%A7%BB%E6%93%8D%E4%BD%9C%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%9D%91/</link>
      <pubDate>Mon, 25 Jul 2022 11:44:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E4%BD%8D%E7%A7%BB%E6%93%8D%E4%BD%9C%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%9D%91/</guid>
      <description>现有int16类型的整数，将它转为两个字节存放。在还原时，一不小心会就被坑了。</description>
    </item>
    <item>
      <title>golang制作python启动外壳</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E5%88%B6%E4%BD%9Cpython%E5%90%AF%E5%8A%A8%E5%A4%96%E5%A3%B3/</link>
      <pubDate>Mon, 25 Jul 2022 11:44:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E5%88%B6%E4%BD%9Cpython%E5%90%AF%E5%8A%A8%E5%A4%96%E5%A3%B3/</guid>
      <description>pyhton程序在windows上运行, 如何双击启动？</description>
    </item>
    <item>
      <title>golang如何正确关闭计时器</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E5%85%B3%E9%97%AD%E8%AE%A1%E6%97%B6%E5%99%A8/</link>
      <pubDate>Mon, 25 Jul 2022 11:44:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E5%85%B3%E9%97%AD%E8%AE%A1%E6%97%B6%E5%99%A8/</guid>
      <description>go的官方库计时器, 有一个陷阱，ticker.Stop()如果不注意会导致协程无法关闭。</description>
    </item>
    <item>
      <title>golang实现单例模式</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 25 Jul 2022 11:44:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>go已经提供了实现单例模式的工具sync.Once</description>
    </item>
    <item>
      <title>golang用通道实现串口信号量</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E7%94%A8%E9%80%9A%E9%81%93%E5%AE%9E%E7%8E%B0%E4%B8%B2%E5%8F%A3%E4%BF%A1%E5%8F%B7%E9%87%8F/</link>
      <pubDate>Mon, 25 Jul 2022 11:44:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E7%94%A8%E9%80%9A%E9%81%93%E5%AE%9E%E7%8E%B0%E4%B8%B2%E5%8F%A3%E4%BF%A1%E5%8F%B7%E9%87%8F/</guid>
      <description>串口通信，使用权该谁？需要采用信号量，进行控制。go如何实现?</description>
    </item>
    <item>
      <title>golang的import原理</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E7%9A%84import%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 25 Jul 2022 11:44:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E7%9A%84import%E5%8E%9F%E7%90%86/</guid>
      <description>import是个很重要的东西，golang是怎么import的</description>
    </item>
    <item>
      <title>golang网络字节与基本类型转换</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E7%BD%91%E7%BB%9C%E5%AD%97%E8%8A%82%E4%B8%8E%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Mon, 25 Jul 2022 11:44:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E7%BD%91%E7%BB%9C%E5%AD%97%E8%8A%82%E4%B8%8E%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <description>网络通信需要将go基本数据类型转为字节. go如何做？</description>
    </item>
    <item>
      <title>gorm模型定义原理借鉴分析</title>
      <link>https://www.yongqingking.top/posts/golang/gorm%E6%A8%A1%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%8E%9F%E7%90%86%E5%80%9F%E9%89%B4%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 25 Jul 2022 11:44:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/gorm%E6%A8%A1%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%8E%9F%E7%90%86%E5%80%9F%E9%89%B4%E5%88%86%E6%9E%90/</guid>
      <description>python有元类概念，在定义db模型时，相当方便，极大简化代码. go中没有元类概念, gorm有模型定义，看看它怎么实现，能否借鉴</description>
    </item>
    <item>
      <title>docker安装influxdb</title>
      <link>https://www.yongqingking.top/posts/golang/docker%E5%AE%89%E8%A3%85influxdb/</link>
      <pubDate>Mon, 25 Jul 2022 11:40:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/docker%E5%AE%89%E8%A3%85influxdb/</guid>
      <description>influxdb的docker-compose如何配置</description>
    </item>
    <item>
      <title>gin日志如何使用zap写日志</title>
      <link>https://www.yongqingking.top/posts/golang/gin%E6%97%A5%E5%BF%97%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8zap%E5%86%99%E6%97%A5%E5%BF%97/</link>
      <pubDate>Mon, 25 Jul 2022 11:40:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/gin%E6%97%A5%E5%BF%97%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8zap%E5%86%99%E6%97%A5%E5%BF%97/</guid>
      <description>gin对外提供了io.Writer接口, 并且默认日志写入到控制台. 如何使用zap写入文件呢?</description>
    </item>
    <item>
      <title>goja能够做什么</title>
      <link>https://www.yongqingking.top/posts/golang/goja%E8%83%BD%E5%A4%9F%E5%81%9A%E4%BB%80%E4%B9%88/</link>
      <pubDate>Mon, 25 Jul 2022 11:40:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/goja%E8%83%BD%E5%A4%9F%E5%81%9A%E4%BB%80%E4%B9%88/</guid>
      <description>goja实现了ECMAScript 5.1(+)</description>
    </item>
    <item>
      <title>golang如何实现静态变量的效果.md</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E7%9A%84%E6%95%88%E6%9E%9C/</link>
      <pubDate>Mon, 25 Jul 2022 11:40:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E7%9A%84%E6%95%88%E6%9E%9C/</guid>
      <description>go的结构和方法接收者, 可以模拟类的概念, 然而go不支持静态变量</description>
    </item>
    <item>
      <title>golang的继承不是继承</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E7%9A%84%E7%BB%A7%E6%89%BF%E4%B8%8D%E6%98%AF%E7%BB%A7%E6%89%BF/</link>
      <pubDate>Mon, 25 Jul 2022 11:40:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E7%9A%84%E7%BB%A7%E6%89%BF%E4%B8%8D%E6%98%AF%E7%BB%A7%E6%89%BF/</guid>
      <description>struct嵌套，内层struct方法访问同名的属性，这个属性是谁的？</description>
    </item>
    <item>
      <title>golang编译-ldflags -H windowsgui病毒</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E7%BC%96%E8%AF%91-ldflags-h-windowsgui%E7%97%85%E6%AF%92/</link>
      <pubDate>Mon, 25 Jul 2022 11:40:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E7%BC%96%E8%AF%91-ldflags-h-windowsgui%E7%97%85%E6%AF%92/</guid>
      <description>使用walk为程序做了一个windows界面, cmd窗口需要隐藏. 结果exe程序被杀毒软件认为是病毒</description>
    </item>
    <item>
      <title>golang超时等待</title>
      <link>https://www.yongqingking.top/posts/golang/golang%E8%B6%85%E6%97%B6%E7%AD%89%E5%BE%85/</link>
      <pubDate>Mon, 25 Jul 2022 11:40:00 +0800</pubDate>
      <guid>https://www.yongqingking.top/posts/golang/golang%E8%B6%85%E6%97%B6%E7%AD%89%E5%BE%85/</guid>
      <description>go中如何实现超时等待</description>
    </item>
  </channel>
</rss>
